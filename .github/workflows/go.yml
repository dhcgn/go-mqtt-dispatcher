name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [
          { os: 'linux', arch: 'amd64', suffix: '' },
          { os: 'windows', arch: 'amd64', suffix: '.exe' }
        ]
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history and tags

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: Build ${{ matrix.target.os }}
      env:
        GOOS: ${{ matrix.target.os }}
        GOARCH: ${{ matrix.target.arch }}
      run: |
        chmod +x ./scripts/build.sh
        ./scripts/build.sh go-mqtt-dispatcher-${{ matrix.target.os }}-${{ matrix.target.arch }}${{ matrix.target.suffix }}

    - name: Test
      if: matrix.target.os == 'linux'
      run: go test -coverprofile=coverage.txt -v ./...

    - name: Upload coverage reports to Codecov
      if: matrix.target.os == 'linux'
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: binaries-${{ matrix.target.os }}-${{ matrix.target.arch }}
        path: go-mqtt-dispatcher-${{ matrix.target.os }}-${{ matrix.target.arch }}${{ matrix.target.suffix }}